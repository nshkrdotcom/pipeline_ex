workflow:
  name: "claude_streaming_demo"
  version: "1.0.0"
  description: "Demonstrates async streaming capabilities with Claude"
  
  defaults:
    claude_options:
      output_format: "json"
      verbose: true
      telemetry_enabled: true
      cost_tracking: true

  steps:
    - name: "streaming_console_output"
      type: "claude"
      description: "Stream responses to console in real-time"
      
      claude_options:
        # Enable async streaming with console handler
        async_streaming: true
        stream_handler: "console"
        stream_buffer_size: 50  # Smaller buffer for more frequent updates
        
        # Standard options
        max_turns: 10
        allowed_tools: ["Write", "Read", "Edit"]
        system_prompt: "You are a helpful assistant. Provide detailed explanations."
        cwd: "./workspace"
      
      prompt:
        - type: "static"
          content: |
            Create a Python script that implements a simple web server.
            Include:
            1. Basic HTTP server using built-in libraries
            2. Routing for at least 3 endpoints
            3. Error handling
            4. Logging
            
            Explain each part as you implement it.
      
      output_to_file: "streaming_result.json"
    
    - name: "streaming_with_file_handler"
      type: "claude_smart"
      preset: "development"
      description: "Stream to file for later analysis"
      
      claude_options:
        # Stream to file
        async_streaming: true
        stream_handler: "file"
        stream_buffer_size: 100
        
        # Override preset defaults
        max_turns: 15
      
      prompt:
        - type: "static"
          content: "Analyze the web server implementation and suggest improvements"
        - type: "previous_response"
          step: "streaming_console_output"
      
      output_to_file: "analysis_streamed.json"
    
    - name: "parallel_streaming_tasks"
      type: "parallel_claude"
      description: "Multiple streaming tasks in parallel"
      
      parallel_tasks:
        - id: "stream_tests"
          claude_options:
            async_streaming: true
            stream_handler: "buffer"
            stream_buffer_size: 200
            max_turns: 10
            allowed_tools: ["Write", "Read"]
            cwd: "./workspace/tests"
          prompt:
            - type: "static"
              content: "Write comprehensive tests for the web server"
          output_to_file: "tests_streamed.json"
        
        - id: "stream_docs"
          claude_options:
            async_streaming: true
            stream_handler: "console"
            max_turns: 5
            allowed_tools: ["Write"]
            cwd: "./workspace/docs"
          prompt:
            - type: "static"
              content: "Create documentation for the web server API"
          output_to_file: "docs_streamed.json"
    
    - name: "robust_streaming"
      type: "claude_robust"
      description: "Streaming with error recovery"
      
      retry_config:
        max_retries: 3
        backoff_strategy: "exponential"
        retry_conditions: ["timeout", "stream_error"]
      
      claude_options:
        async_streaming: true
        stream_handler: "console"
        stream_buffer_size: 75
        max_turns: 20
        timeout_ms: 120000  # 2 minutes
      
      prompt:
        - type: "static"
          content: "Deploy the web server to production with proper monitoring"
      
      output_to_file: "deployment_streamed.json"
    
    - name: "session_with_streaming"
      type: "claude_session"
      description: "Interactive session with streaming"
      
      session_config:
        session_name: "streaming_tutorial"
        persist: true
        checkpoint_frequency: 5
      
      claude_options:
        async_streaming: true
        stream_handler: "console"
        stream_buffer_size: 25  # Small buffer for interactive feel
        max_turns: 50
      
      prompt:
        - type: "static"
          content: "Let's interactively debug and improve the web server"
        - type: "session_context"
          session_id: "streaming_tutorial"
          include_last_n: 10
      
      output_to_file: "session_streamed.json"