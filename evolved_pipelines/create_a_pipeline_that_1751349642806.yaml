\nworkflow:\n  name: enhanced_pipeline_generator\n  description: Advanced pipeline generator with comprehensive analysis, optimization, and multi-step generation\n  version: \"2.0.0\"\n\n  steps:\n  - name: analyze_request\n    type: claude\n    prompt:\n      - type: \"static\"\n        content: |\n          Analyze this pipeline request in detail: {{pipeline_request}}\n          \n          Provide a structured analysis including:\n          1. Core objective and goals\n          2. Required steps and workflow stages\n          3. Input/output requirements\n          4. Complexity assessment (simple/moderate/complex)\n          5. Recommended providers (claude/gemini) for each step\n          6. Potential challenges and edge cases\n          7. Success criteria and validation points\n          \n          Format your response as a structured analysis that will inform pipeline generation.\n\n  - name: design_architecture\n    type: claude\n    prompt:\n      - type: \"static\"\n        content: |\n          Based on this analysis: {{analyze_request.response}}\n          \n          Design a comprehensive pipeline architecture with:\n          \n          1. **Step Breakdown**: Detailed sequence of processing steps\n          2. **Data Flow**: How information flows between steps\n          3. **Error Handling**: Validation and error recovery strategies\n          4. **Optimization**: Performance and efficiency considerations\n          5. **Extensibility**: How the pipeline can be enhanced later\n          6. **Testing Strategy**: How to validate pipeline effectiveness\n          \n          Create a detailed technical design that optimizes for:\n          - Reliability and robustness\n          - Clear separation of concerns\n          - Reusable components\n          - Comprehensive error handling\n          - Performance efficiency\n\n  - name: generate_enhanced_pipeline\n    type: claude\n    prompt:\n      - type: \"static\"\n        content: |\n          Using this technical design: {{design_architecture.response}}\n          \n          Create a production-ready YAML pipeline configuration that implements:\n          \n          **Enhanced Features:**\n          - Multi-step validation and verification\n          - Comprehensive error handling with recovery\n          - Progress tracking and status reporting\n          - Input sanitization and output formatting\n          - Performance optimization\n          - Detailed logging and debugging information\n          \n          **Quality Standards:**\n          - Clear, descriptive step names\n          - Well-structured prompts with specific instructions\n          - Appropriate provider selection for each task\n          - Proper YAML formatting and structure\n          - Complete workflow metadata\n          \n          **Requirements:**\n          - Include workflow, name, description, version, and steps sections\n          - Use descriptive names based on the original request\n          - Implement robust prompts that handle edge cases\n          - Add validation steps where appropriate\n          - Be ready to execute with 'mix pipeline.run'\n          \n          Return only the complete, optimized YAML configuration.\n\n  - name: quality_review\n    type: claude\n    prompt:\n      - type: \"static\"\n        content: |\n          Review this generated pipeline: {{generate_enhanced_pipeline.response}}\n          \n          Perform a comprehensive quality assessment:\n          \n          1. **Functionality Review**: Does it fully address the original request?\n          2. **Code Quality**: Is the YAML well-structured and readable?\n          3. **Error Handling**: Are there adequate safeguards and validations?\n          4. **Performance**: Are there any optimization opportunities?\n          5. **Maintainability**: Is the pipeline easy to understand and modify?\n          6. **Best Practices**: Does it follow pipeline_ex conventions?\n          \n          If any issues are found, provide specific recommendations for improvement.\n          If the pipeline is production-ready, confirm its quality and readiness.\n          \n          Format your response as a structured quality report.\n\n  - name: finalize_pipeline\n    type: claude\n    prompt:\n      - type: \"static\"\n        content: |\n          Based on this quality review: {{quality_review.response}}\n          \n          And the generated pipeline: {{generate_enhanced_pipeline.response}}\n          \n          Produce the final, optimized pipeline configuration.\n          \n          If the quality review identified issues:\n          - Apply all recommended improvements\n          - Fix any structural or logical problems\n          - Enhance error handling and validation\n          - Optimize performance and readability\n          \n          If no issues were found:\n          - Return the pipeline as-is with confirmation\n          \n          **Final Output Requirements:**\n          - Complete, executable YAML configuration\n          - Follows all pipeline_ex standards\n          - Production-ready quality\n          - Comprehensive error handling\n          - Clear documentation in step descriptions\n          \n          Return ONLY the final YAML pipeline configuration.\n