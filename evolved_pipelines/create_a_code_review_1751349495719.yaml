\nworkflow: code_review_automation\nname: Code Review Automation Pipeline\ndescription: Automated code review pipeline that analyzes code changes, identifies issues, and provides comprehensive feedback on code quality, security, and best practices\nversion: 1.0\n\nsteps:\n  - type: input\n    name: get_code_input\n    description: Get code files or changes to review\n    params:\n      prompt: \"Please provide the code files or changes you want reviewed (paste code or specify file paths)\"\n      required: true\n\n  - type: llm\n    name: analyze_code_structure\n    description: Analyze overall code structure and architecture\n    provider: claude\n    params:\n      prompt: |\n        You are an expert code reviewer. Analyze the following code for structural and architectural issues:\n\n        Code to review:\n        {{ get_code_input.response }}\n\n        Please provide a detailed analysis covering:\n        1. Code structure and organization\n        2. Design patterns usage\n        3. Modularity and separation of concerns\n        4. Naming conventions\n        5. Code complexity and readability\n\n        Format your response as structured feedback with specific line references where applicable.\n\n  - type: llm\n    name: security_analysis\n    description: Perform security vulnerability analysis\n    provider: claude\n    params:\n      prompt: |\n        You are a security expert conducting a code security review. Analyze the following code for security vulnerabilities:\n\n        Code to review:\n        {{ get_code_input.response }}\n\n        Focus on identifying:\n        1. Common security vulnerabilities (OWASP Top 10)\n        2. Input validation issues\n        3. Authentication and authorization flaws\n        4. Data exposure risks\n        5. Injection vulnerabilities\n        6. Cryptographic issues\n\n        Provide specific recommendations for fixing any identified issues. Rate severity as Critical, High, Medium, or Low.\n\n  - type: llm\n    name: performance_review\n    description: Analyze code for performance issues\n    provider: gemini\n    params:\n      prompt: |\n        As a performance optimization expert, review this code for performance issues:\n\n        Code to review:\n        {{ get_code_input.response }}\n\n        Analyze for:\n        1. Algorithmic complexity issues\n        2. Memory usage optimization opportunities\n        3. Database query efficiency\n        4. Resource management\n        5. Caching opportunities\n        6. Async/await usage patterns\n\n        Provide actionable performance improvement suggestions with estimated impact.\n\n  - type: llm\n    name: best_practices_check\n    description: Check adherence to coding best practices\n    provider: claude\n    params:\n      prompt: |\n        Review the following code against industry best practices and coding standards:\n\n        Code to review:\n        {{ get_code_input.response }}\n\n        Evaluate:\n        1. Code style and formatting consistency\n        2. Error handling patterns\n        3. Documentation and comments quality\n        4. Testing considerations\n        5. Maintainability factors\n        6. Language-specific idioms and conventions\n\n        Provide specific recommendations for improvement with examples where helpful.\n\n  - type: llm\n    name: generate_summary_report\n    description: Generate comprehensive review summary\n    provider: claude\n    params:\n      prompt: |\n        Create a comprehensive code review summary report based on the following analyses:\n\n        Structural Analysis:\n        {{ analyze_code_structure.response }}\n\n        Security Analysis:\n        {{ security_analysis.response }}\n\n        Performance Review:\n        {{ performance_review.response }}\n\n        Best Practices Check:\n        {{ best_practices_check.response }}\n\n        Generate a structured report with:\n        1. Executive Summary\n        2. Critical Issues (must fix)\n        3. Important Improvements (should fix)\n        4. Suggestions (nice to have)\n        5. Overall Code Quality Score (1-10)\n        6. Prioritized Action Items\n\n        Format as a professional code review report suitable for development teams.\n\n  - type: output\n    name: review_results\n    description: Output the complete code review results\n    params:\n      content: |\n        # Code Review Automation Results\n\n        ## Summary Report\n        {{ generate_summary_report.response }}\n\n        ---\n\n        ## Detailed Analysis\n\n        ### Code Structure & Architecture\n        {{ analyze_code_structure.response }}\n\n        ### Security Analysis\n        {{ security_analysis.response }}\n\n        ### Performance Review\n        {{ performance_review.response }}\n\n        ### Best Practices Assessment\n        {{ best_practices_check.response }}\n